openapi: "3.0.0"
info:
  title: F1 API
  version: "1.0"
tags:
  - name: SeasonController
  - name: RaceController
  - name: TeamController
  - name: DriverController
  - name: EngineController
  - name: TeamOfSeasonController
  - name: DriverOfRaceController
  - name: Seasons
  - name: Races
  - name: Qualifyings
  - name: Results
  - name: FastestLaps
  - name: TopSpeeds
  - name: LeadingLaps
  - name: FastestPitStops
  - name: Teams
  - name: Drivers
  - name: Engines
  - name: TeamsOfSeasons
  - name: DriversOfRaces
paths:
  # SeasonController
  /seasons:
    post:
      x-internal: true
      summary: Create season
      tags:
        - "Seasons"
        - "SeasonController"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/Season"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Season"
        400:
          $ref: "./components/responses.yml#/400"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    get:
      summary: Get seasons / Get season by seasonYear
      tags:
        - "Seasons"
        - "SeasonController"
      parameters:
        - $ref: "./components/parameters.yml#/seasonYear"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Seasons"
        400:
          $ref: "./components/responses.yml#/400"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /seasons/{seasonId}:
    get:
      summary: Get season
      tags:
        - "Seasons"
        - "SeasonController"
      parameters:
        - $ref: "./components/parameters.yml#/seasonId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Season"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        500:
          $ref: "./components/responses.yml#/500"
  /seasons/{seasonId}/races:
    post:
      x-internal: true
      summary: Create race of a season
      tags:
        - "Races"
        - "SeasonController"
      parameters:
        - $ref: "./components/parameters.yml#/seasonId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/Race"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Race"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    get:
      summary: Get races of a season / Get race of a season by raceName
      tags:
        - "Races"
        - "SeasonController"
      parameters:
        - $ref: "./components/parameters.yml#/seasonId"
        - $ref: "./components/parameters.yml#/raceName"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Races"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /seasons/{seasonId}/teams:
    get:
      summary: Get teams of a season
      tags:
        - "Teams"
        - "SeasonController"
      parameters:
        - $ref: "./components/parameters.yml#/seasonId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Teams"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /seasons/{seasonId}/teams/{teamId}/drivers:
    get:
      summary: Get drivers of a team of a season
      tags:
        - "Drivers"
        - "SeasonController"
      parameters:
        - $ref: "./components/parameters.yml#/seasonId"
        - $ref: "./components/parameters.yml#/teamId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Drivers"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /seasons/{seasonId}/teams/{teamId}/engine:
    get:
      summary: Get engine of a team of a season
      tags:
        - "Engines"
        - "SeasonController"
      parameters:
        - $ref: "./components/parameters.yml#/seasonId"
        - $ref: "./components/parameters.yml#/teamId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Engine"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        500:
          $ref: "./components/responses.yml#/500"
  /seasons/{seasonId}/drivers:
    get:
      summary: Get drivers of a season
      tags:
        - "Drivers"
        - "SeasonController"
      parameters:
        - $ref: "./components/parameters.yml#/seasonId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Drivers"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /seasons/{seasonId}/drivers/{driverId}/teams:
    get:
      summary: Get teams of a driver of a season
      tags:
        - "Teams"
        - "SeasonController"
      parameters:
        - $ref: "./components/parameters.yml#/seasonId"
        - $ref: "./components/parameters.yml#/driverId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Teams"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /seasons/{seasonId}/engines:
    get:
      summary: Get engines of a season
      tags:
        - "Engines"
        - "SeasonController"
      parameters:
        - $ref: "./components/parameters.yml#/seasonId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Engines"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /seasons/{seasonId}/engines/{engineId}/teams:
    get:
      summary: Get teams which use the engine in the season
      tags:
        - "Teams"
        - "SeasonController"
      parameters:
        - $ref: "./components/parameters.yml#/seasonId"
        - $ref: "./components/parameters.yml#/engineId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Teams"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"

  # RaceController
  /races:
    get:
      summary: Get races / Get races by raceName / Get race by date
      tags:
        - "Races"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceName"
        - $ref: "./components/parameters.yml#/date"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Races"
        400:
          $ref: "./components/responses.yml#/400"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /races/{raceId}:
    get:
      summary: Get race
      tags:
        - "Races"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Race"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        500:
          $ref: "./components/responses.yml#/500"
    patch:
      x-internal: true
      summary: Update race
      tags:
        - "Races"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/Race"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Race"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /races/{raceId}/qualifying:
    post:
      x-internal: true
      summary: Create qualifying for a driver of a race
      description: |
        **Notice:** The driver must be in the team of the season to which the race belongs. <br>
        If the driver is not in the team, he can be added to it by patching the associated `teamOfSeason` entity. <br>
        **Notice:** Creates new `driverOfRace` entity for the given `raceId`, `driverId` and `teamId`.
      tags:
        - "Qualifyings"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/Qualifying"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Qualifying"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    get:
      summary: Get qualifying of a race / Get qualifying of a driver of a race by driverId
      tags:
        - "Qualifyings"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
        - $ref: "./components/parameters.yml#/driverIdQuery"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Qualifyings"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    patch:
      x-internal: true
      summary: Update qualifying for a driver of a race
      tags:
        - "Qualifyings"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
        - $ref: "./components/parameters.yml#/driverIdQueryRequired"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/QualifyingPatch"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Qualifying"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    # Delete example for VOs
    #delete:
    #  summary: Delete qualifying for a driver of a race
    #  tags:
    #    - "Qualifyings"
    #    - "RaceController"
    #  parameters:
    #    - $ref: "./components/parameters.yml#/raceId"
    #    - $ref: "./components/parameters.yml#/driverIdQueryRequired"
    #  responses:
    #    204:
    #      $ref: "./components/responses.yml#/204"
    #    400:
    #      $ref: "./components/responses.yml#/400"
    #    404:
    #      $ref: "./components/responses.yml#/404"
    #    422:
    #      $ref: "./components/responses.yml#/422"
    #    409:
    #      $ref: "./components/responses.yml#/409"
    #    500:
    #      $ref: "./components/responses.yml#/500"#
  /races/{raceId}/result:
    post:
      x-internal: true
      summary: Create race result for a driver of a race
      description: |
        **Notice:** The driver must have a qualifying entry for the race.
      tags:
        - "Results"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/Result"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Result"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    get:
      summary: Get race result of a race / Get race result of a driver of a race by driverId
      tags:
        - "Results"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
        - $ref: "./components/parameters.yml#/driverIdQuery"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Results"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    patch:
      x-internal: true
      summary: Update race result for a driver of a race
      tags:
        - "Results"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
        - $ref: "./components/parameters.yml#/driverIdQueryRequired"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/ResultPatch"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Result"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /races/{raceId}/fastestLaps:
    post:
      x-internal: true
      summary: Create fastestLap for a driver of a race
      description: |
        **Notice:** The driver must have a race result for the race.
      tags:
        - "FastestLaps"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/FastestLap"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/FastestLap"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    get:
      summary: Get fastestLaps of a race / Get fastestLap of a driver of a race by driverId
      tags:
        - "FastestLaps"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
        - $ref: "./components/parameters.yml#/driverIdQuery"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/FastestLaps"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    patch:
      x-internal: true
      summary: Update fastestLap for a driver of a race
      tags:
        - "FastestLaps"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
        - $ref: "./components/parameters.yml#/driverIdQueryRequired"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/FastestLapPatch"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/FastestLap"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /races/{raceId}/topSpeeds:
    post:
      x-internal: true
      summary: Create topSpeed for a driver of a race
      description: |
        **Notice:** The driver must have a race result for the race.
      tags:
        - "TopSpeeds"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/TopSpeed"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/TopSpeed"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    get:
      summary: Get topSpeeds of a race / Get topSpeed of a driver of a race by driverId
      tags:
        - "TopSpeeds"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
        - $ref: "./components/parameters.yml#/driverIdQuery"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/TopSpeeds"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    patch:
      x-internal: true
      summary: Update topSpeed for a driver of a race
      tags:
        - "TopSpeeds"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
        - $ref: "./components/parameters.yml#/driverIdQueryRequired"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/TopSpeedPatch"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/TopSpeed"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /races/{raceId}/leadingLaps:
    post:
      x-internal: true
      summary: Create leadingLaps for a driver of a race
      description: |
        **Notice:** The driver must have a race result for the race.
      tags:
        - "LeadingLaps"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/LeadingLaps"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/LeadingLaps"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    get:
      summary: Get leadingLaps of a race / Get leadingLaps of a driver of a race by driverId
      tags:
        - "LeadingLaps"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
        - $ref: "./components/parameters.yml#/driverIdQuery"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/LeadingLapsList"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    patch:
      x-internal: true
      summary: Update leadingLaps for a driver of a race
      tags:
        - "LeadingLaps"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
        - $ref: "./components/parameters.yml#/driverIdQueryRequired"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/LeadingLapsPatch"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/LeadingLaps"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /races/{raceId}/fastestPitStop:
    post:
      x-internal: true
      summary: Create fastestPitStop of a race
      description: |
        **Notice:** There can only be one fastestPitStop of the race. <br>
        **Notice:** The driver must have a race result for the race.
      tags:
        - "FastestPitStops"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/FastestPitStop"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/FastestPitStop"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    get:
      summary: Get fastestPitStop of a race
      tags:
        - "FastestPitStops"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/FastestPitStop"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    patch:
      x-internal: true
      summary: Update fastestPitStop of a race
      tags:
        - "FastestPitStops"
        - "RaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/FastestPitStop"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/FastestPitStop"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"

  # TeamController
  /teams:
    post:
      x-internal: true
      summary: Create team
      tags:
        - "Teams"
        - "TeamController"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/Team"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Team"
        400:
          $ref: "./components/responses.yml#/400"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    get:
      summary: Get teams / Get team by teamName
      tags:
        - "Teams"
        - "TeamController"
      parameters:
        - $ref: "./components/parameters.yml#/teamName"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Teams"
        400:
          $ref: "./components/responses.yml#/400"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /teams/{teamId}:
    get:
      summary: Get team
      tags:
        - "Teams"
        - "TeamController"
      parameters:
        - $ref: "./components/parameters.yml#/teamId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Team"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        500:
          $ref: "./components/responses.yml#/500"
    patch:
      x-internal: true
      summary: Update team
      tags:
        - "Teams"
        - "TeamController"
      parameters:
        - $ref: "./components/parameters.yml#/teamId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/Team"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Team"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /teams/{teamId}/drivers:
    get:
      summary: Get all drivers a team has ever had
      tags:
        - "Drivers"
        - "TeamController"
      parameters:
        - $ref: "./components/parameters.yml#/teamId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Drivers"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /teams/{teamId}/drivers/{driverId}/seasons:
    get:
      summary: Get all seasons in which the driver participated in the team
      tags:
        - "Seasons"
        - "TeamController"
      parameters:
        - $ref: "./components/parameters.yml#/teamId"
        - $ref: "./components/parameters.yml#/driverId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Seasons"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /teams/{teamId}/engines:
    get:
      summary: Get all engines a team has ever had
      tags:
        - "Engines"
        - "TeamController"
      parameters:
        - $ref: "./components/parameters.yml#/teamId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Engines"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /teams/{teamId}/engines/{engineId}/seasons:
    get:
      summary: Get all seasons in which the team used the engine
      tags:
        - "Seasons"
        - "TeamController"
      parameters:
        - $ref: "./components/parameters.yml#/teamId"
        - $ref: "./components/parameters.yml#/engineId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Seasons"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /teams/{teamId}/seasons:
    get:
      summary: Get all seasons in which the team participated
      tags:
        - "Seasons"
        - "TeamController"
      parameters:
        - $ref: "./components/parameters.yml#/teamId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Seasons"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"

  # DriverController
  /drivers:
    post:
      x-internal: true
      summary: Create driver
      tags:
        - "Drivers"
        - "DriverController"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/Driver"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Driver"
        400:
          $ref: "./components/responses.yml#/400"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    get:
      summary: Get drivers / Get driver by firstName and lastName
      tags:
        - "Drivers"
        - "DriverController"
      parameters:
        - $ref: "./components/parameters.yml#/firstName"
        - $ref: "./components/parameters.yml#/lastName"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Drivers"
        400:
          $ref: "./components/responses.yml#/400"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /drivers/{driverId}:
    get:
      summary: Get driver
      tags:
        - "Drivers"
        - "DriverController"
      parameters:
        - $ref: "./components/parameters.yml#/driverId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Driver"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        500:
          $ref: "./components/responses.yml#/500"
    patch:
      x-internal: true
      summary: Update driver
      tags:
        - "Drivers"
        - "DriverController"
      parameters:
        - $ref: "./components/parameters.yml#/driverId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/Driver"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Driver"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /drivers/{driverId}/teams:
    get:
      summary: Get all teams in which the driver was
      tags:
        - "Teams"
        - "DriverController"
      parameters:
        - $ref: "./components/parameters.yml#/driverId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Teams"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /drivers/{driverId}/seasons:
    get:
      summary: Get all seasons in which the driver participated
      tags:
        - "Seasons"
        - "DriverController"
      parameters:
        - $ref: "./components/parameters.yml#/driverId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Seasons"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"

  # EngineController
  /engines:
    post:
      x-internal: true
      summary: Create engine
      tags:
        - "Engines"
        - "EngineController"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/Engine"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Engine"
        400:
          $ref: "./components/responses.yml#/400"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    get:
      summary: Get engines / Get engine by manufacturer
      tags:
        - "Engines"
        - "EngineController"
      parameters:
        - $ref: "./components/parameters.yml#/manufacturer"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Engines"
        400:
          $ref: "./components/responses.yml#/400"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /engines/{engineId}:
    get:
      summary: Get engine
      tags:
        - "Engines"
        - "EngineController"
      parameters:
        - $ref: "./components/parameters.yml#/engineId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Engine"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        500:
          $ref: "./components/responses.yml#/500"
    patch:
      x-internal: true
      summary: Update engine
      tags:
        - "Engines"
        - "EngineController"
      parameters:
        - $ref: "./components/parameters.yml#/engineId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/Engine"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Engine"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /engines/{engineId}/teams:
    get:
      summary: Get all teams which used the engine
      tags:
        - "Teams"
        - "EngineController"
      parameters:
        - $ref: "./components/parameters.yml#/engineId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Teams"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
  /engines/{engineId}/seasons:
    get:
      summary: Get all seasons in that the engine was used
      tags:
        - "Seasons"
        - "EngineController"
      parameters:
        - $ref: "./components/parameters.yml#/engineId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/Seasons"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"

  # TeamOfSeasonController
  /teamsOfSeasons:
    x-internal: true
    post:
      summary: Add drivers and engine to a team of a season
      tags:
        - "TeamsOfSeasons"
        - "TeamOfSeasonController"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/TeamsOfSeasons"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/TeamsOfSeasons"
        400:
          $ref: "./components/responses.yml#/400"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    get:
      summary: Get teamsOfSeasons / Get teamOfSeason by seasonId and teamId
      tags:
        - "TeamsOfSeasons"
        - "TeamOfSeasonController"
      parameters:
        - $ref: "./components/parameters.yml#/seasonIdQuery"
        - $ref: "./components/parameters.yml#/teamIdQuery"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/TeamsOfSeasons"
        400:
          $ref: "./components/responses.yml#/400"
        500:
          $ref: "./components/responses.yml#/500"
  /teamsOfSeasons/{teamOfSeasonId}:
    x-internal: true
    patch:
      summary: Update teamOfSeason
      tags:
        - "TeamsOfSeasons"
        - "TeamOfSeasonController"
      parameters:
        - $ref: "./components/parameters.yml#/teamOfSeasonId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/TeamOfSeason"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/TeamOfSeason"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    get:
      summary: Get teamOfSeason / Not particularly needed
      tags:
        - "TeamsOfSeasons"
        - "TeamOfSeasonController"
      parameters:
        - $ref: "./components/parameters.yml#/teamOfSeasonId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/TeamOfSeason"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        500:
          $ref: "./components/responses.yml#/500"

  # DriverOfRaceController
  /driversOfRaces:
    x-internal: true
    get:
      summary: Get driversOfRaces / Get driverOfRace by raceId and driverId
      tags:
        - "DriversOfRaces"
        - "DriverOfRaceController"
      parameters:
        - $ref: "./components/parameters.yml#/raceIdQuery"
        - $ref: "./components/parameters.yml#/driverIdQuery"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/DriversOfRaces"
        400:
          $ref: "./components/responses.yml#/400"
        500:
          $ref: "./components/responses.yml#/500"
  /driversOfRaces/{driverOfRaceId}:
    x-internal: true
    patch:
      summary: Update driverOfRace
      tags:
        - "DriversOfRaces"
        - "DriverOfRaceController"
      parameters:
        - $ref: "./components/parameters.yml#/driverOfRaceId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./components/schemas.yml#/DriverOfRace"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/DriverOfRace"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        409:
          $ref: "./components/responses.yml#/409"
        422:
          $ref: "./components/responses.yml#/422"
        500:
          $ref: "./components/responses.yml#/500"
    get:
      summary: Get driverOfRace / Not particularly needed
      tags:
        - "DriversOfRaces"
        - "DriverOfRaceController"
      parameters:
        - $ref: "./components/parameters.yml#/driverOfRaceId"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "./components/schemas.yml#/DriverOfRace"
        400:
          $ref: "./components/responses.yml#/400"
        404:
          $ref: "./components/responses.yml#/404"
        500:
          $ref: "./components/responses.yml#/500"
